{"version":3,"sources":["components/RuleComp.js","pages/Input.js","components/Cell.js","components/CellRow.js","components/World.js","components/Reducers/WorldReducer.js","pages/Home.js","pages/App.js","reportWebVitals.js","index.js"],"names":["RuleComp","idx","isValid","array","returnValue","deleteSelf","toggleValidSelf","editArray","className","ruleSetIdx","class","type","value","id","defaultChecked","onChange","for","onClick","aria-label","selected","RuleGrid","toggleValue","gridIdx","newArray","map","el","i","val","arr","RuleCell","Input","genIdx","Math","random","toString","substring","initialRuleSet","useState","ruleSet","setRuleSet","deleteRuleSet","newRuleSet","filter","ruleSetProp","toggleValidRuleSet","console","log","key","newRule","addRuleSet","Cell","j","styles","setStyles","useContext","worldContext","world","dispatch","cells","isAlive","setIsAlive","useEffect","e","currentState","data","style","CellRow","row","state","World","simulation","setSimulation","simulate","clearInterval","setInterval","State","prevState","rows","cols","this","neighbors","Array","k","l","col","push","x","y","InitialState","StateDict","WhiteSpace","BoxBorder","Random","floor","StateNames","worldReducer","action","newIndex","length","next","make2DArray","neighs","alive_neighs","createContext","Home","Provider","useReducer","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4e5a67e.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../styles/RuleComp.css'\r\n\r\nexport const RuleComp = ({idx, isValid, returnValue, array, deleteSelf, toggleValidSelf, editArray}) => {\r\n    return (\r\n        <div className=\"rulecomp-container\">\r\n            <div className=\"rulecomp-wrapper\">\r\n                <RuleGrid array={array} ruleSetIdx={idx} editArray={editArray}/>\r\n                <div className=\"rulecomp-content\">\r\n                    <h6>{`RuleSet #${idx}`}</h6>\r\n                    <div class=\"form-check rulecomp-checkbox\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" defaultChecked={isValid} onChange={() => toggleValidSelf(idx)}/>\r\n                        <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n                          Valid\r\n                        </label>\r\n                        <div className=\"rulecomp-delete-icon\" onClick={() => deleteSelf(idx)}>\r\n                            <i class=\"bi bi-trash-fill\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"rulecomp-returns\">\r\n                        <select class=\"form-select form-select-sm\" aria-label=\"Default select example\">\r\n                          <option value=\"0\">0</option>\r\n                          <option selected value=\"1\">1</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const RuleGrid = ({array, editArray, ruleSetIdx}) => {\r\n\r\n    const toggleValue = (array, gridIdx) => {\r\n        let newArray = [...array].map((el, i) => {\r\n            if(i === gridIdx){\r\n                el = el === 0 ? 1 : 0\r\n            }\r\n            return el\r\n        })\r\n        editArray(ruleSetIdx, newArray)\r\n    }\r\n\r\n    return (\r\n        <div className=\"rulegrid-container\">\r\n            <div className=\"rulegrid-wrapper\">\r\n                {\r\n                    array.map((val, i, arr) => <RuleCell val={val} idx={i} key={i} array={arr} toggleValue={toggleValue} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const RuleCell = ({val, idx, array, toggleValue}) => {\r\n    return (\r\n        <div className={`rulecell ${val===1 ? 'true': 'false'}`} onClick={() => toggleValue(array, idx)}/>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport '../styles/Input.css'\r\nimport {RuleComp} from '../components/RuleComp'\r\n\r\nconst Input = () => {\r\n\r\n    const genIdx = () => {\r\n        return Math.random().toString(36).substring(7,10);\r\n    }\r\n\r\n    const initialRuleSet = [\r\n        {\r\n            idx: genIdx(),\r\n            array: [\r\n                0,0,0,\r\n                0,1,1,\r\n                0,0,1\r\n            ],\r\n            returnValue: true,\r\n            isValid: true,\r\n        }\r\n    ]\r\n\r\n    const [ruleSet, setRuleSet] = useState(initialRuleSet)\r\n\r\n    const addRuleSet = () => {\r\n        const newRule = {\r\n            idx: genIdx(),\r\n            array: [\r\n                0,0,0,\r\n                0,0,0,\r\n                0,0,0\r\n            ],\r\n            returnValue: true,\r\n            isValid: true,\r\n        }\r\n        let newRuleSet = [...ruleSet, newRule]\r\n        setRuleSet(newRuleSet)\r\n    }\r\n\r\n    const deleteRuleSet = (idx) => {\r\n        const newRuleSet = [...ruleSet].filter(ruleSetProp => ruleSetProp.idx !== idx)\r\n        setRuleSet(newRuleSet)\r\n    }\r\n\r\n    const toggleValidRuleSet = (idx) => {\r\n        let newRuleSet = [...ruleSet]\r\n        newRuleSet = newRuleSet.map(ruleSetProp => {\r\n            if(ruleSetProp.idx === idx){\r\n                ruleSetProp.isValid = !ruleSetProp.isValid\r\n            }\r\n            return ruleSetProp\r\n        })\r\n        setRuleSet(newRuleSet)\r\n    }\r\n\r\n    const editArray = (idx, array) => {\r\n        let newRuleSet = [...ruleSet]\r\n        newRuleSet = newRuleSet.map(ruleSetProp => {\r\n            if(ruleSetProp.idx === idx){\r\n                ruleSetProp.array = array\r\n            }\r\n            return ruleSetProp\r\n        })\r\n        setRuleSet(newRuleSet)\r\n        console.log(ruleSet)\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-container\">\r\n            <h2>Edit Ruleset</h2>\r\n            <div className=\"input-wrapper\">\r\n                {\r\n                    ruleSet.map((ruleSetProp, key) => (\r\n                        <RuleComp \r\n                            key={key}\r\n                            idx={ruleSetProp.idx} \r\n                            isValid={ruleSetProp.isValid}\r\n                            returnValue={ruleSetProp.returnValue} \r\n                            array={ruleSetProp.array}\r\n                            deleteSelf={deleteRuleSet}\r\n                            toggleValidSelf={toggleValidRuleSet}\r\n                            editArray={editArray}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"input-footer\">\r\n                <div className=\"input-add-icon\">\r\n                    <i class=\"bi bi-plus-square-dotted\" onClick={() => addRuleSet()}></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React, { useContext, useState, useEffect } from 'react';\r\n\r\nimport { worldContext } from '../pages/Home';\r\n\r\nimport '../styles/Cell.css';\r\n\r\nconst Cell = ({i, j}) => {\r\n\r\n    const [styles, setStyles] = useState({\r\n        'backgroundColor' : 'white',\r\n    });\r\n\r\n    const [world, dispatch] = useContext(worldContext);\r\n    const [isAlive, setIsAlive] = useState(world.cells[i][j]);\r\n\r\n    const toggleLife = (e) => {\r\n\r\n        if(world.currentState === 0){\r\n\r\n            if(!isAlive){\r\n                dispatch({data : {i, j}, type : \"TOGGLE_ON\"});\r\n            }else{\r\n                dispatch({data : {i, j}, type : \"TOGGLE_OFF\"});\r\n            }\r\n\r\n        }\r\n\r\n        console.log(\"Cell Clicked\");\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(isAlive){\r\n            setStyles({\r\n                'backgroundColor' : 'black',\r\n            });\r\n        }else{\r\n            setStyles({\r\n                'backgroundColor' : 'white',\r\n            });\r\n        }\r\n\r\n    }, [isAlive]);\r\n\r\n    useEffect(() => {\r\n        setIsAlive(world.cells[i][j]);\r\n    }, [world]);\r\n\r\n    return (\r\n        <div onClick={toggleLife} style={styles} className=\"cell-container\"></div>\r\n    );\r\n\r\n}\r\n\r\nexport default Cell;","import React from 'react';\r\n\r\nimport Cell from './Cell';\r\n\r\nimport '../styles/CellRow.css';\r\nconst CellRow = ({i, row}) => {\r\n\r\n    return (\r\n        <div className=\"cell-row-container\">\r\n            {row.map((state, j) => <Cell i={i} j={j} key={j}></Cell>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CellRow;","import React, {createContext, useContext, useReducer, useState} from 'react';\r\n\r\nimport CellRow from './CellRow';\r\nimport { worldContext } from '../pages/Home';\r\n\r\nimport '../styles/World.css';\r\n\r\n\r\nexport const World = () => {\r\n\r\n    const [world, dispatch] = useContext(worldContext);\r\n\r\n    const [simulation, setSimulation] = useState(null);\r\n    \r\n    const clear = () => {\r\n        dispatch({type : 'CLEAR'});\r\n    }\r\n\r\n    const simulate = () => {\r\n        dispatch({type : 'SIMULATING'});\r\n    }\r\n\r\n    const toggleSimulation = (e) => {\r\n        if(simulation){\r\n            clearInterval(simulation);\r\n            setSimulation(null);\r\n            console.log(\"OFF\");\r\n        }else{\r\n            setSimulation(setInterval(simulate, 50));\r\n            console.log(\"ON\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"world-container\">\r\n            {world.cells.map((row, i) => <CellRow i={i} key={i} row={row}></CellRow>)}\r\n            <button onClick={(e) => {dispatch({type : 'CHANGE_STATE'})}} >Change</button>\r\n            <button onClick={toggleSimulation}>Simulate</button>\r\n            <button onClick={simulate}>Step It</button>\r\n            <button onClick={clear}>Clear</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default World;","class State {\r\n\r\n    constructor(prevState, rows, cols){\r\n\r\n        if(!prevState){\r\n\r\n            this.currentState = 0;\r\n            this.rows = rows;\r\n            this.cols = cols;\r\n            this.neighbors = {};\r\n\r\n            this.cells = new Array(rows);\r\n\r\n            for(let i = 0; i < rows; i++){\r\n                this.cells[i] = new Array(cols);\r\n            }\r\n\r\n            for(let i = 0; i < rows; i++){\r\n                this.neighbors[i] = {};\r\n                for(let j = 0; j < cols; j++){\r\n                    this.cells[i][j] = false;\r\n\r\n                    this.neighbors[i][j] = [];\r\n                    for (let k = -1; k < 2; k++) {\r\n                        for (let l = -1; l < 2; l++) {\r\n                            let row = (k + i + rows) % rows;\r\n                            let col = (l + j + cols) % cols;\r\n                            this.neighbors[i][j].push({x : row, y : col});\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }else{\r\n\r\n            this.rows = prevState.rows;\r\n            this.cols = prevState.cols;\r\n            this.cells = prevState.cells;\r\n            this.currentState = prevState.currentState;\r\n            this.neighbors = prevState.neighbors;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    check(i, j){\r\n        return i >= 0 && i < this.rows && j >= 0 && j < this.cols;\r\n    }\r\n\r\n    make2DArray() {\r\n        let arr = new Array(this.rows);\r\n        for (let i = 0; i < this.rows; i++) {\r\n            arr[i] = new Array(this.cols);\r\n        }\r\n        return arr;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const BoxBorder = (state) => {\r\n\r\n    for(let i = 0; i < state.rows; i++){\r\n        for(let j = 0; j < state.cols; j++){\r\n            state.cells[i][j] = false;\r\n        }\r\n    }\r\n\r\n    for(let i = 0; i < state.cols; i++){\r\n        state.cells[0][i] = true;\r\n        state.cells[state.rows-1][i] = true;\r\n    }\r\n\r\n    for(let j = 1; j < state.rows-1; j++){\r\n        state.cells[j][0] = true;\r\n        state.cells[j][state.cols-1] = true;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const Random = (state) => {\r\n\r\n    for(let i = 0; i < state.rows; i++){\r\n        for(let j = 0; j < state.cols; j++){\r\n            state.cells[i][j] = false;\r\n        }\r\n    }\r\n\r\n    for(let i = 0; i < state.rows; i++){\r\n        for(let j = 0; j < state.cols; j++){\r\n            if(Math.floor(Math.random(2))){\r\n                state.cells[i][j] = true;\r\n            }else{\r\n                state.cells[i][j] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const WhiteSpace = (state) => {\r\n\r\n    for(let i = 0; i < state.rows; i++){\r\n        for(let j = 0; j < state.cols; j++){\r\n            state.cells[i][j] = false;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const InitialState = ({rows, cols}) => {\r\n    return new State(null, rows, cols);\r\n}\r\n\r\nconst StateDict = {WhiteSpace, BoxBorder, Random};\r\nlet StateNames = [];\r\nfor(let k in StateDict) StateNames.push(k);\r\n\r\nexport const worldReducer = (state, action) => {\r\n\r\n    if(action.type == \"TOGGLE_ON\"){\r\n\r\n        state.cells[action.data.i][action.data.j] = true;\r\n\r\n    }else if(action.type == \"TOGGLE_OFF\"){\r\n\r\n        state.cells[action.data.i][action.data.j] = false;\r\n        \r\n    }else if(action.type == \"CHANGE_STATE\"){\r\n\r\n        let newIndex = state.currentState + 1;\r\n\r\n        if(newIndex >= StateNames.length){\r\n            newIndex = 0;\r\n        }\r\n\r\n        state.currentState = newIndex;\r\n        StateDict[StateNames[state.currentState]](state);\r\n\r\n    }else if(action.type == \"CLEAR\"){\r\n        \r\n        for(let i = 0; i < state.rows; i++){\r\n            for(let j = 0; j < state.cols; j++){\r\n                state.cells[i][j] = false;\r\n            }\r\n        }\r\n\r\n    }else if(action.type == \"SIMULATING\"){\r\n\r\n        let next = state.make2DArray();\r\n\r\n        for(let i = 0; i < state.rows; i++){\r\n            for(let j = 0; j < state.cols; j++){\r\n\r\n                let neighs = state.neighbors[i][j];\r\n                let alive_neighs = 0;\r\n\r\n                for(let k = 0; k < 9; k++){\r\n                    if(state.cells[neighs[k].x][neighs[k].y]) alive_neighs += 1;\r\n                }\r\n\r\n                if(state.cells[i][j]){\r\n                    alive_neighs -= 1;\r\n                }\r\n\r\n                if(state.cells[i][j] === false && alive_neighs === 3){\r\n                    next[i][j] = true;\r\n                }else if(state.cells[i][j] === true && (alive_neighs < 2 || alive_neighs > 3)){\r\n                    next[i][j] = false;\r\n                }else{\r\n                    next[i][j] = state.cells[i][j];\r\n                }\r\n            }\r\n        }\r\n\r\n        state.cells = next;\r\n\r\n    }\r\n\r\n    return new State(state, 0, 0);\r\n\r\n}\r\n\r\n","import React, {createContext, useState, useReducer} from 'react';\r\n// import {WorldComponent} from '../components/World';\r\n\r\nimport World from '../components/World';\r\nimport { worldReducer, InitialState } from '../components/Reducers/WorldReducer';\r\n\r\nimport '../styles/Home.css';\r\n\r\nexport const worldContext = createContext();\r\n\r\nexport const Home = () => {\r\n\r\n    const rows = 30;\r\n    const cols = 80;\r\n\r\n    return (\r\n        <worldContext.Provider value={useReducer(worldReducer, {rows : rows, cols : cols}, InitialState)}>\r\n            <div className=\"home-container\">\r\n                <div className=\"home-wrapper\">\r\n                    {/* <World rows={rows} cols={cols}></World> */}\r\n                    <World></World>\r\n                </div>\r\n            </div>\r\n        </worldContext.Provider>\r\n    )\r\n}\r\n\r\n// export default Home\r\n","import '../styles/App.css';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport Input from './Input'\r\nimport {Home} from './Home';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/input'>\r\n            <Input/>\r\n          </Route>\r\n          <Route path='/'>\r\n            <Home/>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './pages/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}